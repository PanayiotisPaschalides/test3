{"version":3,"sources":["components/history.js","components/Tools/Rating.js","components/Messenger/Messenger.js","components/AdCreation/AdCreation.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","RatingComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","logUser","user","RecieverUser","Reciever","rating","People","Rates","onStarClick","bind","assertThisInitialized","_this2","axios","get","params","User","then","res","setState","data","Total","i","nextValue","prevValue","name","react_default","a","createElement","style","fontSize","rel","href","react_star_rating_component_default","starCount","starColor","value","Component","Messenger","UserID","Page","ChatList","ActiveChat","ToUser","SenderUser","MessagesList","MessengerMsg","LoadChatItems","LoadMessages","OpenChat","OnMsgChange","SendMsg","UpdateStatus","OpenAdvert","ReadMsg","CheckRead","interval","setInterval","_this3","UserName","id","to","sender","reciever","_this4","ChatID","event","target","_this5","msg","undefined","MessageBody","By","To","Message","ID","post","response","status","UpdateChat","_this6","font_color","font_weight","Status","Data","_this7","LastMsg","substring","addopen","_this8","className","ref","div","SidePanel","map","chat","key","by_user","onClick","to_user","src","advert_img","alt","advert_title","last_sender","last_msg","by_read","to_read","toUpperCase","advert_id","advert_price","Rating","ChatPanel","message","placeholder","onChange","Images","DefaultImg","Preview","ImgList","testlist","title","type","PreviewImage","selectedImg","SelectShow","description","cents","pounds","AddImages","DisplayImages","sleep","Remove","upload","onChangeTitle","onChangeDropDown","SelectImage","SelectOpen","SelectClose","OnDescriptionChange","OnPoundsChange","OnCentsChange","self","preventDefault","FileImgs","DisplayImgs","files","length","push","URL","createObjectURL","setTimeout","console","log","milliseconds","start","Date","getTime","image","display","index","indexOf","splice","FormData","append","test","multiple","ImageInput","click","Image","textAlign","Modal","show","onHide","Header","Body","step","min","max","home","LoginShow","SignupShow","DropDownMenuShow","Username","Password","PasswordConfirm","Email","searchField","AdvertList","TempManagmentList","recipesList","ManagmentList","OpenedRecipe","IngredientsList","testimg","MessengerStatus","LoggedIn","lat","long","song","pictures","handleClickHome","handleClickRecipe","handleClickLog","handleClickReg","handleClickUsername","onChangesearchField","onChangeUsername","onChangePassword","onChangePasswordConfirm","onChangeEmail","LoadAdverts","Search","LoginOpen","LoginClose","SignupOpen","SignupClose","onLoginSubmit","onSignupSubmit","Logout","SignupLink","LoginLink","OpenDropDown","CloseDropDown","onManageRecipesClick","ConstructManagmentList","publish","un_publish","LoadRecipe","OnMessengerClick","CheckForNewMessages","PostAdd","Geocode","setApiKey","enableDebug","fromAddress","_response$results$0$g","results","geometry","location","lng","error","history","LogUserOut","window","reload","LogUserIn","Recipes","recipe","keywords","views","comments","PageBody","PageHeader","onMouseEnter","onMouseOver","lib_default","Advert","OpenRecipe","price","components_Messenger_Messenger","AdCreation_AdCreation","onMouseLeave","Footer","cookies","Cookies","App","LogUser","set","path","remove","Router","Route","exact","render","components_home","assign","LogOut","withCookies","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d02a16c2.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","/*'use strict'\r\nimport axios from 'axios';\r\nvar Rates;\r\nvar People;\r\nmodule.exports.GetRatings = (user) => {\r\n    axios.get('/api/GetRating', {\r\n        params:{\r\n            User : user\r\n        }\r\n    })\r\n    .then(res => { \r\n        Rates = res.data.Rates \r\n        People = res.data.People\r\n        \r\n    \r\n})\r\nconsole.log(Rates)\r\nconsole.log(People)\r\n    return user;\r\n}\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types'\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nclass RatingComponent extends Component {\r\n\r\n    static propTypes = {\r\n        user: PropTypes.string,\r\n        Reciever : PropTypes.string\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            logUser: this.props.user,\r\n            RecieverUser: this.props.Reciever,\r\n            rating: 0,\r\n            People: 0,\r\n            Rates: []\r\n\r\n            \r\n\r\n        }\r\n        this.onStarClick = this.onStarClick.bind(this);\r\n        \r\n    }\r\n    componentDidMount(){\r\n        axios.get('/api/GetRating', {\r\n            params:{\r\n                User : this.state.RecieverUser\r\n            }\r\n        })\r\n        .then(res => { this.setState({Rates : res.data.Rates,People : res.data.People})\r\n        if (this.state.People !== 0){\r\n            var Total = 0;\r\n            for (var i = 0; i < this.state.People; i++) { \r\n                Total = Total + this.state.Rates[i]['rating'];\r\n            }\r\n            this.setState({rating: Total/this.state.People})\r\n        }\r\n    })\r\n            \r\n        }\r\n        onStarClick(nextValue, prevValue, name) {\r\n            this.setState({rating: nextValue});\r\n            \r\n          }\r\n    render() {\r\n        \r\n\r\n    return (\r\n\r\n      <div style={{fontSize: '30px'}}>\r\n      <link rel=\"stylesheet\" href=\"node_modules/react-star-rating/dist/css/react-star-rating.min.css\"></link>\r\n        {/*https://github.com/voronianski/react-star-rating-component */}\r\n             <StarRatingComponent \r\n          name=\"rate1\" \r\n          starCount={5}\r\n          starColor={'#A66FA6'}\r\n          value={this.state.rating}\r\n          onStarClick={this.onStarClick}\r\n        />\r\n        \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RatingComponent;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types'\r\nimport './Messenger.css';\r\nimport RatingComponent from '../Tools/Rating'\r\nclass Messenger extends Component {\r\n\r\n    static propTypes = {\r\n        user: PropTypes.string\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            logUser: this.props.user,\r\n            UserID: '',\r\n            Page: '',\r\n            ChatList: [],\r\n            ActiveChat: '',\r\n            ToUser: '',\r\n            SenderUser: '',\r\n            RecieverUser: '',\r\n            MessagesList: [],\r\n            MessengerMsg: ''\r\n            \r\n\r\n        }\r\n        this.LoadChatItems = this.LoadChatItems.bind(this);\r\n        this.LoadMessages = this.LoadMessages.bind(this);\r\n        this.OpenChat = this.OpenChat.bind(this);\r\n        this.OnMsgChange = this.OnMsgChange.bind(this);\r\n        this.SendMsg = this.SendMsg.bind(this);\r\n        this.UpdateStatus = this.UpdateStatus.bind(this);\r\n        this.OpenAdvert =  this.OpenAdvert.bind(this);\r\n        this.ReadMsg =  this.ReadMsg.bind(this);\r\n        this.CheckRead =  this.CheckRead.bind(this);\r\n        \r\n    }\r\n    componentDidMount(){\r\n        this.LoadChatItems(); \r\n\r\n            this.interval = setInterval(() => {\r\n              \r\n                    this.LoadMessages(this.state.ActiveChat) ;\r\n                    this.LoadChatItems();\r\n                    \r\n               \r\n            if(this.state.ActiveChat !== '')\r\n            {\r\n                this.ReadMsg();\r\n                this.UpdateStatus(this.state.SenderUser,'yes');\r\n            }\r\n            }, 1000);\r\n\r\n                \r\n            \r\n        }\r\n    LoadChatItems(){\r\n        \r\n        axios.get('/api/LoadChatItems', {\r\n            params:{\r\n                UserName : this.state.logUser\r\n            }\r\n        })\r\n        .then(res => {this.setState({ChatList : res.data})\r\n    })\r\n    }\r\n    OpenChat(id,to,sender,reciever){\r\n        this.setState({ToUser: to, SenderUser: sender, RecieverUser: reciever});\r\n        this.LoadMessages(id)\r\n        this.ReadMsg()\r\n    }\r\n    LoadMessages(id){\r\n        axios.get('/api/LoadMessages', {\r\n            params:{\r\n                ChatID : id\r\n            }\r\n        })\r\n        .then(res => {this.setState({MessagesList : res.data , ActiveChat: id })\r\n        \r\n    })\r\n    }\r\n    OnMsgChange(event){\r\n        this.setState({MessengerMsg: event.target.value})\r\n    }\r\n    SendMsg(){\r\n        \r\n        var msg = this.state.MessengerMsg;\r\n        if(this.state.ActiveChat !== undefined && this.state.MessengerMsg !== '')\r\n        {\r\n            const MessageBody={\r\n                \r\n                By: this.state.logUser,\r\n                To: this.state.ToUser,\r\n                Message: this.state.MessengerMsg,\r\n                ID: this.state.ActiveChat,\r\n                \r\n            }\r\n            axios.post('/api/SendMsg',MessageBody)\r\n            .then((response)=>{\r\n                if(response.data.status){\r\n                    this.setState({MessengerMsg: ''});\r\n                }\r\n            }).then(this.UpdateStatus(this.state.RecieverUser,'no')).then(this.UpdateChat(msg))\r\n\r\n\r\n        }\r\n    }\r\n    CheckRead(id){\r\n        axios.get('/api/checkRead', {\r\n            params:{\r\n                UserName : this.state.logUser,\r\n                ID: id\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.data)\r\n            {\r\n                this.setState({font_color: 'black', font_weight: 'bold'})\r\n            }\r\n            else{\r\n                this.setState({font_color: 'rgba(75, 75, 75, 0.726)', font_weight: 'none'})\r\n            }\r\n            \r\n    })\r\n    }\r\n    UpdateStatus(User,Status){\r\n        const Data={\r\n            user: User,\r\n            status: Status,\r\n            ID: this.state.ActiveChat\r\n        }\r\n        axios.post('/api/UpdateStatus',Data)\r\n        .then((response)=>{\r\n            if(response.data.status){\r\n                \r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    ReadMsg(){\r\n        const Data={\r\n            User: this.state.logUser,\r\n            ID: this.state.ActiveChat\r\n        }\r\n        axios.post('/api/ReadMsg',Data)\r\n        .then((response)=>{\r\n            if(response.data.status){\r\n                \r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    UpdateChat(msg){\r\n        \r\n        const Data={\r\n            UserName: this.state.logUser,\r\n            ChatID: this.state.ActiveChat,\r\n            LastMsg: msg.substring(0,8) + ' ...'\r\n        }\r\n        axios.post('/api/UpdateChat',Data)\r\n        .then((response)=>{\r\n            if(response.data.status){\r\n                this.LoadChatItems();\r\n            }\r\n        })\r\n\r\n        \r\n    }\r\n    OpenAdvert(id){\r\n        \r\n        this.props.addopen(id);\r\n    }\r\n    render() {\r\n        \r\n\r\n    return (\r\n\r\n      <div>\r\n        \r\n       \r\n        <div className='MessengerContainer'>\r\n                        <div className='sidepanel' ref={(div) => {this.SidePanel = div;}} >\r\n\r\n                        {this.state.ChatList.map((chat) => { return [\r\n\r\n                            <div className='chatItem' key={chat.id} >\r\n                            {chat.by_user === this.state.logUser ? (\r\n                            <div className='chatItemContainer' onClick={() => this.OpenChat(chat.id,chat.to_user,'by_read','to_read')}>\r\n                            <div className= 'chatItemLeft'>\r\n                            <img className= 'ChatItemImg'src={process.env.PUBLIC_URL + '/Uploaded_Images/'+  chat.advert_img} alt='chat.advert_img'/>\r\n                            </div>\r\n                            <div className= 'chatItemRight'>\r\n                            <div className='ChatItemName'>{chat.advert_title}</div>\r\n                            {chat.last_sender === this.state.logUser?<div className='ChatItemPreview'>You: {chat.last_msg}</div>: null}\r\n                            {chat.last_sender !== this.state.logUser && chat.by_read === 'no'?<div className='ChatItemPreviewBold'>{chat.last_msg}</div>: null}\r\n                            {chat.last_sender !== this.state.logUser && chat.by_read === 'yes'?<div className='ChatItemPreview'>{chat.last_msg}</div>: null}\r\n                        </div> \r\n                        </div>):(\r\n                             <div className='chatItemContainer'onClick={() => this.OpenChat(chat.id,chat.by_user,'to_read','by_read')}>\r\n                             <div className= 'chatItemLeft'>\r\n                             <img className= 'ChatItemImg'src={process.env.PUBLIC_URL + '/Uploaded_Images/'+  chat.advert_img} alt='chat.advert_img'/>\r\n                             </div>\r\n                             <div className= 'chatItemRight'>\r\n                             <div className='ChatItemName'>{chat.advert_title}</div>\r\n                             {chat.last_sender === this.state.logUser?<div className='ChatItemPreview'>You: {chat.last_msg}</div>: null}\r\n                            {chat.last_sender !== this.state.logUser && chat.to_read === 'no'?<div className='ChatItemPreviewBold'>{chat.last_msg}</div>: null}\r\n                            {chat.last_sender !== this.state.logUser && chat.to_read === 'yes'?<div className='ChatItemPreview'>{chat.last_msg}</div>: null}\r\n                         </div> \r\n                         </div>\r\n                             \r\n                             )}\r\n                            </div>\r\n                            ];\r\n                        })}\r\n\r\n                        \r\n                        \r\n                        \r\n                        </div>\r\n                        <div className='mainpanel'>\r\n                        <div className='advertpanel'>\r\n                        {this.state.ChatList.map((chat) => { return [\r\n\r\n                            <div  key={chat.id} >\r\n                            {chat.id === this.state.ActiveChat ? (\r\n                                <div className='advertItems'>\r\n                            <div className='AdvertInitialImg'>\r\n                            {chat.by_user === this.state.logUser?<label className='AdvertInitialChar'>{chat.to_user[0].toUpperCase()}</label>: <label>{chat.by_user[0].toUpperCase()}</label>}\r\n                            </div>\r\n                            <div className='AdvertDetails'><label className='AdvertTitle' onClick={() => this.OpenAdvert(chat.advert_id)}>{chat.advert_title}</label>\r\n                            <label className='AdvertPrice'> £{chat.advert_price}</label>\r\n                            <RatingComponent user={this.state.logUser} Reciever={this.state.ToUser}/>\r\n                            </div>\r\n                            \r\n                            </div>\r\n                            ):(\r\n                            <div></div>\r\n                            )}\r\n                            </div>\r\n                            ];\r\n                            })}\r\n                        \r\n                        \r\n                        </div>\r\n                            <div className='chatpanel' ref={(div) => {this.ChatPanel = div;}}>\r\n\r\n                            {this.state.MessagesList.map((message) => { return [\r\n\r\n                                <div  key={message.id}>\r\n                                {message.by_user === this.state.logUser ? (\r\n                                    <div className='MessageContainer'>\r\n                                    <div className='SendMsgContainer'>\r\n                                    <div className='SendMsgText'>\r\n                                    {message.message}\r\n                                    </div>\r\n                                    </div>\r\n                                    </div>\r\n\r\n                                ):(\r\n                                    <div className='MessageContainer'>\r\n                                    <div className='recievedMsgContainer'>\r\n                                    <div className='recievedMsgText'>\r\n                                    {message.message}\r\n                                    </div>\r\n                                    </div>\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                )}\r\n                                </div>\r\n                                \r\n                                \r\n                                \r\n                                ];\r\n                                })}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            \r\n\r\n                   \r\n                            \r\n\r\n                            </div>\r\n                            <div className='bottompanel'>\r\n                            <div className='messagepanel'>\r\n                            <textarea className='TextArea' placeholder='Type Mesage' value={this.state.MessengerMsg} onChange={this.OnMsgChange}></textarea>\r\n                            </div>\r\n                            <div className='chatbuttons'>\r\n                            <button className='MessengerSendBtn' onClick={this.SendMsg}>Send</button>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n      \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Messenger;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types'\r\nimport { Modal} from 'react-bootstrap';\r\nimport './AdCreation.css'\r\n\r\nclass RatingComponent extends Component {\r\n\r\n    static propTypes = {\r\n        user: PropTypes.string,\r\n        \r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            logUser: this.props.user,\r\n            Images: [],\r\n            DefaultImg: 'yes',\r\n            Preview: null,\r\n            ImgList: [],\r\n            testlist: [],\r\n            title: '',\r\n            type: '',\r\n            PreviewImage: false,\r\n            selectedImg: 0,\r\n            SelectShow: false,\r\n            description: '',\r\n            cents: 0,\r\n            pounds: 0\r\n\r\n            \r\n\r\n        }\r\n        this.AddImages = this.AddImages.bind(this);\r\n        this.DisplayImages = this.DisplayImages.bind(this);\r\n        this.sleep = this.sleep.bind(this);\r\n        this.Remove = this.Remove.bind(this);\r\n        this.upload = this.upload.bind(this);\r\n        this.onChangeTitle = this.onChangeTitle.bind(this); \r\n        this.onChangeDropDown = this.onChangeDropDown.bind(this);\r\n        this.SelectImage = this.SelectImage.bind(this);\r\n        this.SelectOpen = this.SelectOpen.bind(this);\r\n        this.SelectClose = this.SelectClose.bind(this);\r\n        this.OnDescriptionChange = this.OnDescriptionChange.bind(this);\r\n        this.OnPoundsChange = this.OnPoundsChange.bind(this);\r\n        this.OnCentsChange = this.OnCentsChange.bind(this);\r\n    }\r\n\r\n    SelectClose() {\r\n        this.setState({ SelectShow: false});\r\n    }\r\n    SelectOpen() {\r\n        this.setState({ SelectShow: true});\r\n    }\r\n    AddImages(event){\r\n        const self = this;\r\n        event.preventDefault();\r\n        \r\n        var FileImgs = this.state.testlist\r\n        var DisplayImgs = this.state.ImgList;\r\n        this.sleep(200);\r\n\r\n        for (var i = 0; i < event.target.files.length; i++) { \r\n            FileImgs.push(event.target.files[i])\r\n            DisplayImgs.push(URL.createObjectURL(event.target.files[i]))\r\n            }\r\n        \r\n        this.setState({ImgList: DisplayImgs, Images : FileImgs})\r\n        setTimeout(function(){ \r\n           \r\n            self.DisplayImages(); }, 200);\r\n        \r\n        \r\n    \r\n    }\r\n    DisplayImages()\r\n    {\r\n        console.log(this.state.Images)\r\n        \r\n        console.log(this.state.type)\r\n    }\r\n    sleep(milliseconds) {\r\n        console.log('sleep')\r\n        var start = new Date().getTime();\r\n        for (var i = 0; i < 1e7; i++) {\r\n          if ((new Date().getTime() - start) > milliseconds){\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      Remove(image){\r\n        var display = this.state.ImgList;\r\n        var files = this.state.Images;\r\n        var index = display.indexOf(image);\r\n        if (index > -1) {\r\n            display.splice(index, 1);\r\n            files.splice(index, 1)\r\n        }\r\n        this.setState({ImgList : display, Images: files, PreviewImage: false, selectedImg: 0})\r\n      }\r\n      upload(){\r\n          console.log(this.state.Images.length)\r\n        for (var i = 0; i < this.state.Images.length; i++) {\r\n        const data = new FormData()\r\n        data.append('file', this.state.Images[i], this.state.Images[i].name)\r\n        \r\n        axios.post('/api/Upload', data)\r\n        \r\n      }\r\n    }\r\n    onChangeTitle(event){\r\n        this.setState({title: event.target.value})\r\n    }\r\n    onChangeDropDown(event){\r\n        this.setState({type: event.target.value})\r\n    }\r\n    SelectImage(index){\r\n        this.setState({selectedImg : index, PreviewImage: true})\r\n        this.SelectClose();\r\n    }\r\n    OnDescriptionChange(event){\r\n        this.setState({description: event.target.value})\r\n    }\r\n    OnPoundsChange(event){\r\n        const re = /^[0-9\\b]+$/;\r\n      if (event.target.value === '' || re.test(event.target.value)) {\r\n         this.setState({pounds: event.target.value})\r\n      }\r\n    }\r\n    OnCentsChange(event){\r\n        const re = /^[0-9\\b]+$/;\r\n      if (event.target.value === '' || re.test(event.target.value)) {\r\n         this.setState({cents: event.target.value})\r\n      }\r\n    }\r\n    render() {\r\n        \r\n        \r\n    return (\r\n\r\n\r\n\r\n      <div >\r\n          <div className='StartingSpacer'></div>\r\n\r\n          <div className='Section'>\r\n          <div className='SectionTitle'>\r\n          <label className='SectionText'>Ad Title</label>\r\n          </div>\r\n          <div className='SectionBody'>\r\n          <input type=\"text\" name=\"title\" placeholder=\"Enter ad Title\" value={this.state.title} onChange={this.onChangeTitle}/>\r\n          </div>\r\n          </div>\r\n\r\n          <div className='Spacer'></div>\r\n\r\n          <div className='Section'>\r\n          <div className='SectionTitle'>\r\n          <label className='SectionText'>Ad type</label>\r\n          </div>\r\n          <div className='SectionBody'>\r\n          <select className='DropDown' onClick={this.onChangeDropDown}>\r\n            <option value=\"Electrical\" className='DropDownOption'>Electrical</option>\r\n            <option value=\"Gardening\" className='DropDownOption'>Gardening</option>\r\n            <option value=\"Cars\" className='DropDownOption'>Cars</option>\r\n            <option value=\"Motorbikes\" className='DropDownOption'>Motorbikes</option>\r\n            <option value=\"Sports\" className='DropDownOption'>Sports</option>\r\n            <option value=\"Clothing\" className='DropDownOption'>Clothing</option>\r\n            <option value=\"audi\" className='DropDownOption'>Education</option>\r\n         </select>\r\n          </div>\r\n          </div>\r\n\r\n          <div className='Spacer'></div>\r\n\r\n          <div className='Section'>\r\n          <div className='SectionTitle'>\r\n          <label className='SectionText'>Add Images</label>\r\n          </div>\r\n          <div className='SectionBody'>\r\n          <div className='ImagesContainer' >\r\n        <div><input  type=\"file\" multiple onChange={this.AddImages} ref={ImageInput => this.ImageInput = ImageInput} /></div>\r\n        \r\n        <div onClick={()=> this.ImageInput.click() } className=\"ImageContainer\">\r\n        <img className=\"Image\"\r\n          src={process.env.PUBLIC_URL + '/Uploaded_Images/preview.jpg'} \r\n          alt=\"\"/>\r\n          \r\n          </div>\r\n        {this.state.ImgList.map((Image,index) => ( //maps throught the state and creates a new array\r\n        <div key={index} className=\"ImageContainer\">\r\n          <img className=\"Image\"\r\n          src={this.state.ImgList[index]} \r\n          alt=\"\"/>\r\n          <button className='RemoveBtn' onClick={() => this.Remove(Image)}>x</button>\r\n          </div>\r\n        ))}\r\n        </div>\r\n          </div>\r\n          </div>\r\n\r\n          <div className='Spacer'></div>\r\n\r\n          <div className='Section'>\r\n          <div className='SectionTitle'>\r\n          <label className='SectionText'>Select Ad Display Image</label>\r\n          </div>\r\n          <div className='SectionBody' style={{textAlign: \"center\"}}>\r\n          <div onClick={this.SelectOpen} className=\"ImageContainer\">\r\n          {this.state.PreviewImage ? <img className=\"Image\"\r\n          src={this.state.ImgList[this.state.selectedImg]} \r\n          alt=\"\"/> : <button className='SelectBtn'>+</button> }\r\n          </div>\r\n          </div>\r\n          </div>\r\n\r\n          <div className='Spacer'></div>\r\n\r\n            <div className='Section'>\r\n            <div className='SectionTitle'>\r\n            <label className='SectionText'>Description</label>\r\n            </div>\r\n            <div className='SectionBody'>\r\n            <textarea className='Description' placeholder='Type Products Description' value={this.state.description} onChange={this.OnDescriptionChange}></textarea>\r\n            </div>\r\n            </div>\r\n\r\n          <Modal show={this.state.SelectShow} onHide={this.SelectClose}>\r\n            <button className='Modal-Close-Btn' onClick={this.SelectClose}>X</button>\r\n              <Modal.Header> \r\n                  <label className='Modal-Title'>Select Image</label>\r\n                  \r\n              </Modal.Header>\r\n              <Modal.Body>\r\n              {this.state.ImgList.map((Image,index) => ( //maps throught the state and creates a new array\r\n            <div key={index} className=\"ImageContainer\" onClick={()=> this.SelectImage(index) }>\r\n            <img className=\"Image\"\r\n            src={this.state.ImgList[index]} \r\n            alt=\"\"/>\r\n            </div>\r\n        ))}\r\n              \r\n              </Modal.Body> \r\n            </Modal>\r\n\r\n            <div className='Spacer'></div>\r\n\r\n            <div className='Section'>\r\n            <div className='SectionTitle'>\r\n            <label className='SectionText'>Sell For</label>\r\n            </div>\r\n            <div className='SectionBody'>\r\n            \r\n            <div className='price'>\r\n            <label className='PriceSymbol'>£</label>\r\n            <input type=\"number\" name=\"pounds\" placeholder=\"00\" value={this.state.pounds} onChange={this.OnPoundsChange} step='any' min='1'/>\r\n            <label className='PriceSeparator'>.</label>\r\n            <input type=\"number\" name=\"cents\" placeholder=\"00\" value={this.state.cents} onChange={this.OnCentsChange} step='any' min='1' max='99'/>\r\n            </div>\r\n            </div>\r\n            </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RatingComponent;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport history from './history';\r\nimport '../css/home.css';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { Modal} from 'react-bootstrap';\r\nimport Messenger from './Messenger/Messenger'\r\nimport Geocode from \"react-geocode\";\r\n//mport Map from \"./Tools/map\"\r\nimport CreateAdd from \"./AdCreation/AdCreation\"\r\n\r\nclass home extends Component {\r\n    constructor(){\r\n        super();\r\n        \r\n        this.state={\r\n            LoginShow: false,\r\n            SignupShow: false,\r\n            DropDownMenuShow: false,\r\n            Username: '',\r\n            Password: '',\r\n            PasswordConfirm: '',\r\n            Email: '',\r\n            searchField: '',\r\n            AdvertList: [],\r\n            TempManagmentList: [],\r\n            recipesList: [],\r\n            ManagmentList: [],\r\n            logUser:'',\r\n            UserID: '',\r\n            Page: '',\r\n            OpenedRecipe: [],\r\n            IngredientsList: [],\r\n            ChatList: [],\r\n            ActiveChat: '',\r\n            ToUser: '',\r\n            SenderUser: '',\r\n            RecieverUser: '',\r\n            MessagesList: [],\r\n            testimg: [],\r\n            MessengerMsg: '',\r\n            MessengerStatus: 'fas fa-comment-o',\r\n            LoggedIn: true,\r\n            lat: '52.018099',\r\n            long: '-1.49229',\r\n            song: [],\r\n            pictures: []\r\n            \r\n            \r\n\r\n        }\r\n        this.handleClickHome = this.handleClickHome.bind(this);\r\n        this.handleClickRecipe = this.handleClickRecipe.bind(this);\r\n        this.handleClickLog = this.handleClickLog.bind(this);\r\n        this.handleClickReg = this.handleClickReg.bind(this);\r\n        this.handleClickUsername = this.handleClickUsername.bind(this);\r\n        this.onChangesearchField = this.onChangesearchField.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onChangePasswordConfirm = this.onChangePasswordConfirm.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n       \r\n        //this.OpenRecipe = this.OpenRecipe.bind(this);\r\n        this.LoadAdverts = this.LoadAdverts.bind(this);\r\n        this.Search =  this.Search.bind(this);\r\n\r\n        //used to show the login\r\n        this.LoginOpen = this.LoginOpen.bind(this);\r\n        this.LoginClose = this.LoginClose.bind(this);\r\n        this.SignupOpen = this.SignupOpen.bind(this);\r\n        this.SignupClose = this.SignupClose.bind(this);\r\n        this.onLoginSubmit = this.onLoginSubmit.bind(this);\r\n        this.onSignupSubmit = this.onSignupSubmit.bind(this);\r\n        this.Logout = this.Logout.bind(this);\r\n        this.SignupLink = this.SignupLink.bind(this);\r\n        this.LoginLink = this.LoginLink.bind(this);\r\n        this.OpenDropDown = this.OpenDropDown.bind(this);\r\n        this.CloseDropDown = this.CloseDropDown.bind(this); \r\n        this.onManageRecipesClick = this.onManageRecipesClick.bind(this);\r\n        this.ConstructManagmentList = this.ConstructManagmentList.bind(this);\r\n        this.publish = this.publish.bind(this);\r\n        this.un_publish = this.un_publish.bind(this);\r\n        this.LoadRecipe =  this.LoadRecipe.bind(this);\r\n       \r\n        this.OnMessengerClick =  this.OnMessengerClick.bind(this);\r\n        this.CheckForNewMessages = this.CheckForNewMessages.bind(this);\r\n        this.OpenAdvert =  this.OpenAdvert.bind(this);\r\n        this.PostAdd =  this.PostAdd.bind(this);\r\n        \r\n    }\r\n    componentDidUpdate(){\r\n        \r\n    }\r\n    componentDidMount(){\r\n        if(this.props.User !== undefined && this.props.ID !== undefined )\r\n        {\r\n            \r\n            this.setState({logUser: this.props.User, UserID: this.props.ID, Page:'Home', LoggedIn: true})\r\n\r\n            this.interval = setInterval(() => {\r\n                \r\n            this.CheckForNewMessages();\r\n           \r\n            }, 1000);\r\n\r\n                \r\n            \r\n        }\r\n        else{\r\n            \r\n            this.setState({ Page:'Home', LoggedIn: false})\r\n        }\r\n        this.LoadAdverts();\r\n        \r\n\r\n    }\r\n    LoginOpen() {\r\n        console.log(this.state.testimg)\r\n        const self = this;\r\n                // set Google Maps Geocoding API for purposes of quota management. Its optional but recommended.\r\n        Geocode.setApiKey(\"AIzaSyDDzkcHMNPwBQcJAMTet_kFkpO75zCxNJI\");\r\n        \r\n        // Enable or disable logs. Its optional.\r\n        Geocode.enableDebug();\r\n        \r\n        // Get address from latidude & longitude.\r\n        /*Geocode.fromLatLng(\"48.8583701\", \"2.2922926\").then(\r\n        response => {\r\n            const address = response.results[0].formatted_address;\r\n            console.log(address);\r\n        },\r\n        error => {\r\n            console.error(error);\r\n        }\r\n        );*/\r\n        \r\n        // Get latidude & longitude from address.\r\n        Geocode.fromAddress(\"CV12HZ\").then(\r\n        response => {\r\n            const { lat, lng } = response.results[0].geometry.location;\r\n            self.setState({lat: lat, long: lng})\r\n            console.log(lat, lng);\r\n            console.log(self.state.lat)\r\n        },\r\n        error => {\r\n            console.error(error);\r\n           \r\n        }\r\n        );\r\n        this.setState({ LoginShow: true});\r\n      }\r\n    \r\n      LoginClose() {\r\n        this.setState({ LoginShow: false, Password: '', Username: ''});\r\n      }\r\n      SignupOpen() {\r\n        this.setState({ SignupShow: true});\r\n      }\r\n    \r\n      SignupClose() {\r\n        this.setState({ SignupShow: false, Password: '', Username: '', PasswordConfirm: '', Email: ''});\r\n      }\r\n      LoadAdverts(){\r\n        axios.get('/api/GetAdverts')\r\n        .then(res => {this.setState({AdvertList : res.data})\r\n    })\r\n\r\n\r\n    }\r\n\r\n    onChangesearchField(event){\r\n        this.setState({searchField: event.target.value});\r\n    \r\n      }\r\n      onChangeUsername(event){\r\n        this.setState({Username: event.target.value});\r\n    \r\n      }\r\n      onChangePassword(event){\r\n        this.setState({Password: event.target.value});\r\n    \r\n      }\r\n      onChangePasswordConfirm(event){\r\n        this.setState({PasswordConfirm: event.target.value});\r\n    \r\n      }\r\n      onChangeEmail(event){\r\n        this.setState({Email: event.target.value});\r\n    \r\n      }\r\n    handleClickHome(event){\r\n        event.preventDefault();\r\n        this.LoadAdverts();\r\n        this.setState({Page: 'Home'});\r\n    }\r\n\r\n    handleClickRecipe(event){\r\n        event.preventDefault();\r\n        this.setState({Page: 'Recipe'});\r\n    }\r\n\r\n    handleClickLog(event){\r\n        event.preventDefault();\r\n        history.push('/login');\r\n    }\r\n\r\n    handleClickReg(event){\r\n        event.preventDefault();\r\n        history.push('/register');\r\n    }\r\n    handleClickUsername(event){\r\n        event.preventDefault();\r\n        this.setState({Page: ''});\r\n    }\r\n\r\n    Search(event){\r\n        event.preventDefault();\r\n        console.log(this.state.testimg)\r\n        //console.log(this.state.searchField)\r\n        //this.LoadRecipes(this.state.searchField);\r\n    }\r\n    Logout(){\r\n        this.props.LogUserOut();\r\n        window.location.reload();\r\n    }\r\n\r\n    onLoginSubmit(event){\r\n        const self = this;\r\n        axios.get('/api/Login', {\r\n            params: {\r\n            Username: this.state.Username,\r\n            Password: this.state.Password\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            if(response.data.status)\r\n            {\r\n                console.log(response.data)\r\n              self.setState({\r\n                  logUser: self.state.Username, \r\n                  UserID: response.data.ID\r\n              })\r\n              self.props.LogUserIn(self.state.Username, response.data.ID);\r\n              self.LoginClose();\r\n              window.location.reload();\r\n            }\r\n           \r\n          })\r\n    }\r\n    onSignupSubmit(){\r\n        const self = this;\r\n        if(this.state.Password !== this.state.PasswordConfirm)\r\n        {\r\n           \r\n        }\r\n        else\r\n        {\r\n            const user={\r\n                Username: this.state.Username,\r\n                Email: this.state.Email,\r\n                Password: this.state.Password\r\n            }\r\n            axios.post('/api/Register',user)\r\n            .then((response)=>{\r\n                if(response.data.status){\r\n                    self.SignupClose();\r\n                    self.LoginOpen();\r\n                }\r\n            })\r\n        }\r\n    \r\n      \r\n    }\r\n    LoginLink(){\r\n        this.SignupClose();\r\n        this.LoginOpen();\r\n    }\r\n    SignupLink(){\r\n        this.LoginClose();\r\n        this.SignupOpen();\r\n    }\r\n    OpenDropDown()\r\n    {\r\n        \r\n        this.setState({ DropDownMenuShow: true })\r\n         \r\n    }\r\n    CloseDropDown(){\r\n        \r\n       \r\n        this.setState({ DropDownMenuShow: false })\r\n    }\r\n\r\n    onManageRecipesClick(event){\r\n        const self = this;\r\n        axios.get('/api/GetRecipesManagment', {\r\n            params:{\r\n                ID : this.state.UserID\r\n            }\r\n        })\r\n        .then(res => {this.setState({TempManagmentList : res.data})\r\n    })\r\n    .then(() => {self.ConstructManagmentList();});\r\n    }\r\n\r\n    ConstructManagmentList(){\r\n        const Recipes = this.state.TempManagmentList.map(recipe => (\r\n            {id: recipe.id,\r\n            image: recipe.image,\r\n            title: recipe.title,\r\n            keywords: recipe.keywords,\r\n            views: recipe.views,\r\n            comments: recipe.comments,\r\n            status: recipe.status}\r\n          ))\r\n          this.setState({ManagmentList: Recipes, Page: 'Managment'})\r\n    }\r\n    publish(ID){\r\n        const self = this;\r\n        const recipe={\r\n            ID: ID,\r\n            Status: 'yes',\r\n        }\r\n        axios.post('/api/UpdateRecipeStatus',recipe)\r\n        .then((response)=>{\r\n            if(response.data.status){\r\n                self.onManageRecipesClick();\r\n            }\r\n        })\r\n    }\r\n    un_publish(ID){\r\n        const self = this;\r\n            const recipe={\r\n                ID: ID,\r\n                Status: 'no',\r\n            }\r\n            axios.post('/api/UpdateRecipeStatus',recipe)\r\n            .then((response)=>{\r\n                if(response.data.status){\r\n                    self.onManageRecipesClick();\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    OpenRecipe(ID){\r\n            const self = this;\r\n            this.setState({IngredientsList: []})\r\n            const recipe={\r\n                ID: ID,\r\n            }\r\n            axios.post('/api/UpdateRecipeViews',recipe)\r\n            .then((response)=>{\r\n                if(response.data.status){\r\n                    self.LoadRecipe(ID);\r\n                }\r\n            })\r\n    }\r\n    LoadRecipe(ID){\r\n        axios.get('/api/GetRecipe', {\r\n            params:{\r\n                ID : ID\r\n            }\r\n        })\r\n        .then(res => {this.setState({OpenedRecipe : res.data})\r\n    })\r\n    \r\n    }\r\n    \r\n    OnMessengerClick(event){\r\n        event.preventDefault();\r\n        this.setState({Page: 'Messenger'});       \r\n    }\r\n    PostAdd(event){\r\n        event.preventDefault();\r\n        this.setState({Page: 'CreateAdd'});       \r\n    }\r\n    CheckForNewMessages(){\r\n        axios.get('/api/New_Messages_Check', {\r\n            params:{\r\n                UserName : this.state.logUser\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.data)\r\n            {\r\n                this.setState({MessengerStatus: 'fas fa-comment'})\r\n            }\r\n            else{\r\n                this.setState({MessengerStatus: 'fas fa-comment-o'})\r\n            }\r\n            \r\n    })\r\n    }\r\n\r\n\r\n    \r\n    OpenAdvert(id){\r\n        console.log(id + ' Yes im working')\r\n    }\r\n    render() {\r\n        \r\n\r\n        let PageBody;\r\n        let PageHeader;\r\n        if(this.state.LoggedIn)\r\n        {\r\n            PageHeader = (\r\n                <header onMouseEnter={this.CloseDropDown}>\r\n                \r\n                <h1 className=\"sansserif\">e</h1>\r\n                <div className=\"buttons\">\r\n                <button name=\"buttonHome\" onClick={this.handleClickHome} className=\"ButtonStyle\">Home</button>\r\n                \r\n                <button name=\"buttonUsername\" onMouseOver={this.OpenDropDown} className=\"ButtonStyle\"><FontAwesome name='fas fa-user'/></button>\r\n                <button className=\"ButtonMessenger\"onClick={this.OnMessengerClick}><FontAwesome name={this.state.MessengerStatus}/></button>\r\n                \r\n                </div>  \r\n            \r\n            </header>\r\n            )\r\n        }\r\n        else{\r\n            PageHeader = (\r\n                <header onMouseEnter={this.CloseDropDown}>\r\n                \r\n                <h1>My Stuff</h1>\r\n\r\n                <div className=\"buttons\">\r\n                <button name=\"buttonHome\" onClick={this.handleClickHome} className=\"ButtonStyle\">Home</button>\r\n                <button name=\"buttonRecipe\" onClick={this.handleClickRecipe} className=\"ButtonStyle\">Recipes</button>\r\n                <button name=\"buttonLog\" onClick={this.LoginOpen} className=\"ButtonStyle\">Login</button>\r\n                <button name=\"buttonReg\" onClick={this.SignupOpen} className=\"ButtonStyle\">Sing up</button>\r\n                \r\n                </div>  \r\n            \r\n            </header>\r\n            )\r\n        }\r\n\r\n        if(this.state.Page === 'Home'){\r\n            PageBody = (\r\n                <span onMouseEnter={this.CloseDropDown}>\r\n                    <div className='AdvertsContainer'> \r\n                    {this.state.AdvertList.map((Advert) => { return [\r\n                <div key={Advert.id} className=\"Album\" >\r\n                  <img src={process.env.PUBLIC_URL + '/Uploaded_Images/'\r\n                   +  Advert.image} className=\"Album-Img\" alt=\"Album\" onClick={() => this.OpenRecipe(Advert.id)}/>\r\n                  <p className=\"Album-Name\" onClick={() => this.OpenRecipe(Advert.id)}>\r\n                    <label className='title'>{Advert.title}</label>\r\n                    <label className='Price'>£ {Advert.price}</label>\r\n                  </p>\r\n                </div>\r\n                \r\n              ];\r\n            })}\r\n            </div>\r\n                </span>\r\n            )\r\n\r\n            \r\n        }\r\n        else if(this.state.Page === 'Managment'){\r\n\r\n            PageBody = (\r\n                <span onMouseEnter={this.CloseDropDown}>\r\n                    <div className='ManagmentContainer'>\r\n                    {this.state.ManagmentList.map((recipe) => { return [\r\n                <div key={recipe.id} className=\"RecipeItem\" >\r\n                  <div className= 'Item-Img-Container'><img src={process.env.PUBLIC_URL + '/Uploaded_Images/'\r\n                   +  recipe.image} className=\"Item-Img\" alt=\"Item\"/></div>\r\n                  <div className=\"Item-Para\" onClick={() => this.OpenRecipe(recipe.id)}>\r\n                    <div className='Item-title'>{recipe.title}</div>\r\n                    <div className=\"Item-keywords\">{recipe.keywords}</div>\r\n                    <div className=\"Item-stats\"> views: {recipe.views} comments: {recipe.comments}</div>\r\n                  </div>\r\n                  {recipe.status === 'yes' ? <div className='Button-Container'><button className='Item-Buttons' onClick={() =>this.un_publish(recipe.id)}>Un-Publish</button></div> : \r\n                  <div className='Button-Container'><button className='Item-Buttons' onClick={ () =>this.publish(recipe.id)}>Publish</button></div>}\r\n                </div>\r\n\r\n                \r\n                \r\n              ];\r\n            })}\r\n            </div>\r\n                </span>\r\n            )\r\n        }\r\n        else if(this.state.Page === 'Messenger'){\r\n            \r\n            PageBody = (\r\n                <span onMouseEnter={this.CloseDropDown}>\r\n                    <Messenger user={this.state.logUser} addopen={this.OpenAdvert} />\r\n                    </span>\r\n            )\r\n            \r\n        }\r\n        else if(this.state.Page === 'CreateAdd'){\r\n            \r\n            PageBody = (\r\n                    <CreateAdd user={this.state.logUser}/>\r\n            )\r\n            \r\n        }\r\n        \r\n\r\n    return (\r\n\r\n      <div>\r\n            <title>Home</title>\r\n            <link rel=\"stylesheet\" href=\"node_modules/react-star-rating/dist/css/react-star-rating.min.css\"></link>\r\n        {this.state.DropDownMenuShow? (\r\n                 <div className='ExternalContainer' onClick={this.CloseDropDown}>\r\n                    <div className=\"DropdownContainer\" onMouseLeave={this.CloseDropDown}>\r\n                        <button className=\"DropdownItem\">Create recipes</button>\r\n                        <div className=\"divider\"/>\r\n                        <button className=\"DropdownItem\" onClick={this.onManageRecipesClick}>Manage recipes</button>\r\n                        <div className=\"divider\"/>\r\n                        <button className=\"DropdownItem\" onClick={this.PostAdd}>Post Ad</button>\r\n                        <div className=\"divider\"/>\r\n                        <button className=\"DropdownItem\" onClick={this.OnMessengerClick}>Favourites</button>\r\n                        <div className=\"divider\"/>\r\n                        <button className=\"DropdownItem\" onClick={this.Logout}>Logout</button>\r\n                    </div>\r\n                 </div>\r\n             )\r\n                :null}\r\n            {PageHeader}\r\n            <div className='Top-Spacer'/>\r\n      \r\n            \r\n             {PageBody}\r\n            \r\n             {/*<Map lat={this.state.lat} long={this.state.long}/>*/}\r\n            \r\n\r\n             \r\n\r\n            <Modal show={this.state.LoginShow} onHide={this.LoginClose}>\r\n            <button className='Modal-Close-Btn' onClick={this.LoginClose}>X</button>\r\n              <Modal.Header> \r\n                  <label className='Modal-Title'>Log-In</label>\r\n                  \r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                  <div className=\"bodyContainer\">\r\n                  <label className=\"fieldHeading\">Username</label>\r\n                  <br/>\r\n                  <input type=\"text\" className=\"InputField\"  value={this.state.Username} onChange={this.onChangeUsername}/>\r\n                  <br/>\r\n                  <br/>\r\n                  <label className=\"fieldHeading\">Password</label>\r\n                  <br/>\r\n                  <input type=\"password\" className=\"InputField\"  value={this.state.Password} onChange={this.onChangePassword}/>\r\n                  <br/>\r\n                  <br/>\r\n                  <button className='body-Btn' onClick={this.onLoginSubmit}>Login</button>\r\n                  </div>\r\n              \r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <label className='Footer-Message' >DONT HAVE AN ACCOUNT? </label>\r\n                <label className='Footer-Btn' onClick={this.SignupLink}>SIGN UP</label>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={this.state.SignupShow} onHide={this.SignupClose}>\r\n            <button className='Modal-Close-Btn' onClick={this.SignupClose}>X</button>\r\n              <Modal.Header> \r\n                  <label className='Modal-Title'>Sign-Up</label>\r\n                  \r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                  <div className=\"bodyContainer\">\r\n                  <label className=\"fieldHeading\">Username</label>\r\n                  <br/>\r\n                  <input type=\"text\" className=\"InputField\"  value={this.state.Username} onChange={this.onChangeUsername}/>\r\n                  <br/>\r\n                  <br/>\r\n                  <label className=\"fieldHeading\">Password</label>\r\n                  <br/>\r\n                  <input type=\"password\" className=\"InputField\"  value={this.state.Password} onChange={this.onChangePassword}/>\r\n                  <br/>\r\n                  <br/>\r\n                  <label className=\"fieldHeading\">Confirm Password</label>\r\n                  <br/>\r\n                  <input type=\"password\" className=\"InputField\"  value={this.state.PasswordConfirm} onChange={this.onChangePasswordConfirm}/>\r\n                  <br/>\r\n                  <br/>\r\n                  <label className=\"fieldHeading\">Email</label>\r\n                  <br/>\r\n                  <input type=\"email\" className=\"InputField\"  value={this.state.Email} onChange={this.onChangeEmail}/>\r\n                  <br/>\r\n                  <br/>\r\n                  <button className='body-Btn' onClick={this.onSignupSubmit}>Sign Up</button>\r\n                  </div>\r\n              \r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <label className='Footer-Message' >ALREADY HAVE AN ACCOUNT? </label>\r\n                <label className='Footer-Btn' onClick={this.LoginLink} >LOG IN</label>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n        \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default home;\r\n","import React, { Component } from 'react';\r\nimport Home from './components/home';\r\nimport history from './components/history';\r\nimport {Router, Route}from 'react-router-dom';\r\nimport {withCookies} from 'react-cookie';\r\nimport Cookies from 'universal-cookie';\r\n//import './App.css';\r\n\r\nconst cookies = new Cookies();\r\n\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super ();\r\n    this.LogUser = this.LogUser.bind(this);\r\n    }\r\n    \r\n\r\n  \r\n  \r\n  LogUser(User, ID){\r\n    cookies.set('User', User, { path: '/' });\r\n    cookies.set('UserID', ID,{ path: '/' });\r\n  }\r\n\r\n  LogOut(){\r\n    cookies.remove('User');\r\n    cookies.remove('UserID');\r\n  }\r\n  \r\n  \r\n  render() {\r\n    return (\r\n      \r\n      <Router history={history}>\r\n      <div>\r\n        <Route path='/' exact render={(props) => <Home {...props} User={cookies.get('User')} ID={cookies.get('UserID')} LogUserIn={this.LogUser} LogUserOut={this.LogOut}/>}/>\r\n        </div>\r\n      </Router>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withCookies(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}